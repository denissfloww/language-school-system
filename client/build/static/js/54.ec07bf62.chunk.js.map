{"version":3,"file":"static/js/54.ec07bf62.chunk.js","mappings":"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","sources":["pages/UsersSettings/Grid/UsersGridToolbar.tsx","pages/UsersSettings/Grid/index.tsx","pages/UsersSettings/index.tsx"],"sourcesContent":["import Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst UsersGridToolbar = () => {\r\n    return (\r\n        <>\r\n            <Toolbar>\r\n                <Typography sx={{ flex: '1 1 100%' }} variant='h6' id='tableTitle' component='div'>\r\n                    Пользователи\r\n                </Typography>\r\n                <Tooltip title='Добавить пользователя'>\r\n                    <IconButton component={RouterLink}\r\n                                to='/dashboard/settings/user/create'>\r\n                        <AddIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UsersGridToolbar;\r\n","import Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport UsersGridToolbar from './UsersGridToolbar';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { TableCell } from '@mui/material';\nimport * as React from 'react';\nimport TableBody from '@mui/material/TableBody';\nimport Table from '@mui/material/Table';\nimport TableContainer from '@mui/material/TableContainer';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsers, selectUsersState } from '../../../redux/reducers/users/usersReducer';\nimport { IUser } from '../../../interfaces/IUser';\nimport UpdateUserButton from './Buttons/UpdateButton';\nimport TableBodySkeleton from '../../../components/Skeletons/TableBodySkeleton';\nimport DeleteButton from '../../../components/Buttons/DeleteButton';\nimport IconButton from '@mui/material/IconButton';\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst UsersGrid = () => {\n    const dispatch = useDispatch();\n    const { users } = useSelector(selectUsersState);\n    useEffect(() => {\n        dispatch(fetchUsers());\n    }, []);\n    return (\n        <>\n            <Box sx={{ width: '100%' }}>\n                <Paper sx={{ width: '100%', mb: 2 }}>\n                    <UsersGridToolbar />\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 1000 }} size='medium'>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align='left'>Код</TableCell>\n                                    <TableCell align='center'>Имя</TableCell>\n                                    <TableCell align='center'>Отчество</TableCell>\n                                    <TableCell align='center'>Фамилия</TableCell>\n                                    <TableCell align='center'>Роли</TableCell>\n                                    <TableCell align='right'>Действия</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {users ? (\n                                    <>\n                                        {users.data.length ? (\n                                            <>\n                                                {users.data?.map((user: IUser) => (\n                                                    <TableRow key={user.id}>\n                                                        <TableCell component='th' scope='row' align='left'>\n                                                            {user.id}\n                                                        </TableCell>\n                                                        <TableCell component='th' scope='row' align='center'>\n                                                            {user.firstName}\n                                                        </TableCell>\n                                                        <TableCell component='th' scope='row' align='center'>\n                                                            {user.middleName}\n                                                        </TableCell>\n                                                        <TableCell component='th' scope='row' align='center'>\n                                                            {user.lastName}\n                                                        </TableCell>\n                                                        <TableCell component='th' scope='row' align='center'>\n                                                            {user.roles.map(role => (\n                                                                <>{role.label} </>\n                                                            ))}\n                                                            {/*{RoleTypesDisplay[user.role]}*/}\n                                                        </TableCell>\n                                                        <TableCell component='th' scope='row' align='right'>\n                                                            <IconButton to={`/dashboard/settings/users/update/${user.id}`} component={Link}>\n                                                                <EditIcon />\n                                                            </IconButton>\n                                                            <DeleteButton\n                                                                id={user.id}\n                                                                confirmationText='Вы действительно хотите удалить пользователя?'\n                                                                title='Удалить пользователя?'\n                                                                onDeleteMethod={() => {\n                                                                    console.log('делете');\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </>\n                                        ) : (\n                                            <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n                                                <TableCell key={4} component='th' scope='row' align='center'>\n                                                    Отсутствуют данные\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                    </>\n                                ) : (\n                                    <TableBodySkeleton columnsCount={7} />\n                                )}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Paper>\n            </Box>\n        </>\n    );\n};\n\nexport default UsersGrid;\n","import { Helmet } from 'react-helmet';\nimport { APP_NAME } from '../../settings';\nimport * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport UsersGrid from './Grid';\n\nconst UserSettings = () => {\n    return (\n        <>\n            <Helmet>\n                <meta charSet='utf-8' />\n                <title>Управление пользователями - {APP_NAME}</title>\n            </Helmet>\n            <Container maxWidth='lg' sx={{ mt: 10, mb: 4 }}>\n                <Typography variant='h4'>Управление пользователями</Typography>\n                <Box\n                    component='main'\n                    sx={{\n                        backgroundColor: theme => theme.palette.grey[100],\n                        height: '100%',\n                        overflow: 'auto',\n                    }}\n                >\n                    <Toolbar />\n                    <Container maxWidth='lg' sx={{ mb: 4 }}>\n                        <Grid container spacing={3} justifyContent='center'>\n                            <UsersGrid />\n                        </Grid>\n                    </Container>\n                </Box>\n            </Container>\n        </>\n    );\n};\n\nexport default UserSettings;\n"],"names":["Toolbar","Typography","sx","flex","variant","id","component","Tooltip","title","IconButton","RouterLink","to","Add","dispatch","useDispatch","users","useSelector","selectUsersState","useEffect","fetchUsers","Box","width","Paper","mb","TableContainer","Table","minWidth","size","TableHead","TableRow","TableCell","align","TableBody","data","length","map","user","scope","firstName","middleName","lastName","roles","role","label","Link","Edit","DeleteButton","confirmationText","onDeleteMethod","console","log","borderBottom","TableBodySkeleton","columnsCount","Helmet","charSet","APP_NAME","Container","maxWidth","mt","backgroundColor","theme","palette","grey","height","overflow","Grid","container","spacing","justifyContent"],"sourceRoot":""}